-- LocalScript inside StarterPlayerScripts

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local heroEvent = ReplicatedStorage:WaitForChild("CardWarsHeroSelect")
local readyEvent = ReplicatedStorage:WaitForChild("CardWarsReady")

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CardWarsMainMenu"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Background with custom image
local bg = Instance.new("ImageLabel")
bg.Size = UDim2.new(1, 0, 1, 0)
bg.BackgroundTransparency = 1
bg.Image = "rbxassetid://137367874303752"
bg.ScaleType = Enum.ScaleType.Stretch -- Fills entire screen
bg.BorderSizePixel = 0
bg.Parent = screenGui

-- Top logo image (15% bigger)
local topLogo = Instance.new("ImageLabel")
topLogo.Size = UDim2.new(0.69, 0, 0.2875, 0) -- 15% bigger (0.6 * 1.15 = 0.69, 0.25 * 1.15 = 0.2875)
topLogo.Position = UDim2.new(0.155, 0, 0.05, 0) -- Adjusted to keep centered (0.2 - 0.045 = 0.155)
topLogo.BackgroundTransparency = 1
topLogo.Image = "rbxassetid://93804661712260"
topLogo.ScaleType = Enum.ScaleType.Fit
topLogo.Parent = bg

-- Hero selection with clickable ImageLabels
local function createHeroButton(name, posX, imageId)
	-- Create clickable ImageLabel (no background frame needed)
	local imageButton = Instance.new("ImageLabel")
	imageButton.Name = name
	imageButton.Size = UDim2.new(0.3, 0, 0.3, 0) -- Larger size (was 0.25)
	imageButton.Position = UDim2.new(posX, 0, 0.5, 0) -- Higher position, directly above name rectangles
	imageButton.AnchorPoint = Vector2.new(0.5, 0.5)
	imageButton.BackgroundTransparency = 1 -- Fully transparent background
	imageButton.Image = imageId or ""
	imageButton.ScaleType = Enum.ScaleType.Fit
	imageButton.ImageTransparency = 0
	imageButton.ZIndex = 2
	imageButton.Parent = bg

	-- Create invisible button overlay for clicking (same size as image)
	local clickButton = Instance.new("TextButton")
	clickButton.Name = name .. "ClickArea"
	clickButton.Size = UDim2.new(1, 0, 1, 0) -- Same size as the ImageLabel
	clickButton.Position = UDim2.new(0, 0, 0, 0)
	clickButton.BackgroundTransparency = 1
	clickButton.Text = ""
	clickButton.ZIndex = 3
	clickButton.Parent = imageButton

	-- Add hover effects
	local TweenService = game:GetService("TweenService")
	local hoverTweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	clickButton.MouseEnter:Connect(function()
		-- Only show hover effect if this hero isn't dimmed (still selectable)
		if imageButton.ImageTransparency < 0.5 then
			local expandTween = TweenService:Create(imageButton, hoverTweenInfo, {Size = UDim2.new(0.32, 0, 0.32, 0)})
			expandTween:Play()
		end
	end)

	clickButton.MouseLeave:Connect(function()
		-- Only shrink if this hero isn't dimmed
		if imageButton.ImageTransparency < 0.5 then
			local shrinkTween = TweenService:Create(imageButton, hoverTweenInfo, {Size = UDim2.new(0.3, 0, 0.3, 0)})
			shrinkTween:Play()
		end
	end)

	-- Debug output
	print("Created hero button for", name, "with Image ID:", imageId)

	return imageButton, clickButton
end

-- Create hero buttons with Finn and Jake textures
local finnImage, finnButton = createHeroButton("Finn", 0.35, "rbxassetid://113369521037393")
local jakeImage, jakeButton = createHeroButton("Jake", 0.65, "rbxassetid://106106718776906")




-- Player name rectangles
local function createNameRect(name, posX)
	local frame = Instance.new("Frame")
	frame.Name = name
	frame.Size = UDim2.new(0.2, 0, 0.08, 0)
	frame.Position = UDim2.new(posX, 0, 0.75, 0)
	frame.AnchorPoint = Vector2.new(0.5, 0.5)
	frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	frame.BorderSizePixel = 4
	frame.Parent = bg

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = "Waiting..." -- visible placeholder text
	label.TextScaled = true
	label.Font = Enum.Font.Fantasy
	label.TextColor3 = Color3.fromRGB(0, 0, 0)
	label.Parent = frame

	return label
end

local finnName = createNameRect("FinnName", 0.35)
local jakeName = createNameRect("JakeName", 0.65)

-- Begin button
local beginBtn = Instance.new("TextButton")
beginBtn.Size = UDim2.new(0.25, 0, 0.08, 0)
beginBtn.Position = UDim2.new(0.375, 0, 0.9, 0)
beginBtn.BackgroundColor3 = Color3.fromRGB(200, 200, 200) -- Start gray (not ready)
beginBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
beginBtn.BorderSizePixel = 4
beginBtn.Text = "BEGIN GAME"
beginBtn.TextScaled = true
beginBtn.Font = Enum.Font.Fantasy
beginBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
beginBtn.Parent = bg

-- Track player's selected hero (locked in once chosen)
local playerSelectedHero = nil
local localPlayer = game.Players.LocalPlayer

-- Track hero selections for both slots
local heroSelections = {
	Finn = "",
	Jake = ""
}

-- Function to check if both heroes are selected
local function checkBothHeroesSelected()
	return heroSelections.Finn ~= "" and heroSelections.Jake ~= ""
end

-- Function to enable CardWarsUI and disable MainMenu
local function startGame()
	local playerGui = localPlayer:WaitForChild("PlayerGui")
	local cardWarsUI = playerGui:FindFirstChild("CardWarsBoard")
	local mainMenuUI = bg.Parent -- The MainMenu ScreenGui

	print("Attempting to start game...")
	print("CardWarsUI found:", cardWarsUI ~= nil)
	print("MainMenuUI found:", mainMenuUI ~= nil)

	if cardWarsUI then
		cardWarsUI.Enabled = true
		print("CardWarsUI enabled!")
	else
		print("ERROR: CardWarsBoard not found in PlayerGui!")
	end

	if mainMenuUI then
		mainMenuUI.Enabled = false
		print("MainMenu disabled!")
	else
		print("ERROR: MainMenu ScreenGui not found!")
	end
end

-- Hero click handlers with lock-in functionality
finnButton.MouseButton1Click:Connect(function()
	-- Only allow selection if: 1) player hasn't chosen yet, AND 2) Finn isn't taken by someone else
	if playerSelectedHero == nil and heroSelections.Finn == "" then
		heroEvent:FireServer("Finn")
	elseif heroSelections.Finn ~= "" then
		print("Finn is already taken by " .. heroSelections.Finn)
	end
end)

jakeButton.MouseButton1Click:Connect(function()
	-- Only allow selection if: 1) player hasn't chosen yet, AND 2) Jake isn't taken by someone else
	if playerSelectedHero == nil and heroSelections.Jake == "" then
		heroEvent:FireServer("Jake")
	elseif heroSelections.Jake ~= "" then
		print("Jake is already taken by " .. heroSelections.Jake)
	end
end)

-- Listen for server updates
heroEvent.OnClientEvent:Connect(function(heroName, playerName)
	if heroName == "Finn" then
		finnName.Text = playerName ~= "" and playerName or "Waiting..."
		heroSelections.Finn = playerName -- Track selection

		-- Visual feedback for ALL players: if Finn is taken, dim it for everyone
		if playerName ~= "" then
			finnImage.ImageTransparency = 0.7 -- Dim Finn since it's taken
		else
			finnImage.ImageTransparency = 0 -- Restore Finn if it becomes available
		end

		-- Lock in selection if this player chose Finn
		if playerName == localPlayer.Name then
			playerSelectedHero = "Finn"
		end
	elseif heroName == "Jake" then
		jakeName.Text = playerName ~= "" and playerName or "Waiting..."
		heroSelections.Jake = playerName -- Track selection

		-- Visual feedback for ALL players: if Jake is taken, dim it for everyone
		if playerName ~= "" then
			jakeImage.ImageTransparency = 0.7 -- Dim Jake since it's taken
		else
			jakeImage.ImageTransparency = 0 -- Restore Jake if it becomes available
		end

		-- Lock in selection if this player chose Jake
		if playerName == localPlayer.Name then
			playerSelectedHero = "Jake"
		end
	end

	-- Check if both heroes are now selected
	if checkBothHeroesSelected() then
		print("Both heroes selected! BEGIN GAME button is now active.")
		-- You could add visual feedback here like changing button color
		beginBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green when ready
	else
		beginBtn.BackgroundColor3 = Color3.fromRGB(200, 200, 200) -- Gray when not ready
	end
end)

-- Track ready state
local playerReady = false

-- BEGIN GAME / READY button click handler
beginBtn.MouseButton1Click:Connect(function()
	print("BEGIN GAME button clicked!")
	print("Finn selected by:", heroSelections.Finn)
	print("Jake selected by:", heroSelections.Jake)
	print("Both heroes selected:", checkBothHeroesSelected())

	if checkBothHeroesSelected() and not playerReady then
		print("Player is ready!")
		playerReady = true
		readyEvent:FireServer() -- Tell server this player is ready
	elseif not checkBothHeroesSelected() then
		print("Cannot ready up - both heroes must be selected first!")
		print("Missing selections - Finn:", heroSelections.Finn == "", "Jake:", heroSelections.Jake == "")
	end
end)

-- Ready system event handler
readyEvent.OnClientEvent:Connect(function(eventType, data)
	if eventType == "ready_update" then
		local readyCount = data
		print("Ready update: " .. readyCount .. "/2 players ready")

		if readyCount == 1 then
			beginBtn.Text = "Ready (1/2)"
		elseif readyCount == 2 then
			beginBtn.Text = "Ready (2/2)"
		end

	elseif eventType == "start_countdown" then
		print("Countdown starting!")
		beginBtn.Text = "Starting..."

	elseif eventType == "countdown" then
		local timeLeft = data
		beginBtn.Text = tostring(timeLeft)
		print("Countdown: " .. timeLeft)

	elseif eventType == "start_game" then
		print("Game starting for all players!")
		startGame()
	end
end)
